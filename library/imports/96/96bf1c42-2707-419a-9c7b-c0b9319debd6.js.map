{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;AAER,kBAAU,EAAE,CAAC;KAChB;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;AACD,qBAAiB,EAAE,6BAAY;;AAE3B,YAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;;AAE/C,YAAI,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACvD,eAAO,IAAI,CAAC;KACf;;AAED,YAAQ,EAAE,oBAAW;;AAEjB,YAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;;AAEzB,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACvB;CAGJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius: 0\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n \r\n});\r\n"
  ]
}